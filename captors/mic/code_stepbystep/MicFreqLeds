#include "arduinoFFT.h"

#define SAMPLES 128             //Must be a power of 2
#define SAMPLING_FREQUENCY 1000 //Hz, must be less than 10000 due to ADC
#define MIC A0

arduinoFFT FFT = arduinoFFT();

unsigned int sampling_period_us;
unsigned long microseconds;

double vReal[SAMPLES];
double vImag[SAMPLES];

void setup() {
  Serial.begin(115200);

  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);

  sampling_period_us = round(1000000 * (1.0 / SAMPLING_FREQUENCY));
}

void loop() {

  /*SAMPLING*/
  for (int i = 0; i < SAMPLES; i++)
  {
    microseconds = micros();    //Overflows after around 70 minutes!

    vReal[i] = analogRead(0);
    vImag[i] = 0;

    while (micros() < (microseconds + sampling_period_us)) {
    }
  }

  /*FFT*/
  FFT.Windowing(vReal, SAMPLES, FFT_WIN_TYP_HAMMING, FFT_FORWARD);
  FFT.Compute(vReal, vImag, SAMPLES, FFT_FORWARD);
  FFT.ComplexToMagnitude(vReal, vImag, SAMPLES);
  double peak = FFT.MajorPeak(vReal, SAMPLES, SAMPLING_FREQUENCY);

  digitalWrite(2, LOW);
  
  for (int i = 10; i < 20; i++)
  {
    if (vReal[i] > 1000) {
      digitalWrite(2, HIGH);
    }
  }
  for (int j = 10; j < 30; j++)
  {
    if (vReal[j] > 2000) {
      digitalWrite(3, HIGH);
      delay(500);
    } else {
      digitalWrite(3, LOW);
    }
  }
  for (int k = 30; k < 40; k++)
  {
    if (vReal[k] > 1000) {
      digitalWrite(4, HIGH);
      delay(500);
    } else {
      digitalWrite(4, LOW);
    }
  }
  for (int m = 50; m < 60; m++)
  {
    if (vReal[m] > 1000) {
      digitalWrite(5, HIGH);
    delay(500);
    } else {
      digitalWrite(5, LOW);
    }
  }

  /*PRINT RESULTS*/
  //Serial.println(peak);     //Print out what frequency is the most dominant.

  for (int i = 0; i < (SAMPLES / 2); i++)
  {
    /*View all these three lines in serial terminal to see which frequencies has which amplitudes*/

    Serial.print((i * 1.0 * SAMPLING_FREQUENCY) / SAMPLES, 1);
    Serial.print(" ");
    Serial.println(vReal[i], 1);    //View only this line in serial plotter to visualize the bins
  }

  delay(1000);  //Repeat the process every second OR:
  //while(1);       //Run code once
}
